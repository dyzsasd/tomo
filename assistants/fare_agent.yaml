assistant:
  name: Flight Fare Assistant

  intents:
    - name: fare_rule_check
      description: User want to know the conditions of refund, flight exchange in different context.

  slots:
    - name: pnr_number
      description: The Passenger Name Record number of the customer's booking, which is an id composed by 6 letters or digitals. It is usually called booking reference.
      extractable: true
    - name: pnr_details
      description: Details of the retrieved PNR.
      extractable: false
    - name: pnr_confirmed
      description: Confirmation from the customer that the retrieved PNR is correct.
      extractable: true

    - name: fare_rules
      description: >
        detailed terms and conditions that apply to an airline ticket, as defined by the fare basis code.
        These rules determine how the ticket can be used, modified, or refunded, and they outline the restrictions associated with a particular fare.
        Fare rules are critical for both travelers and airlines because they govern flexibility, pricing, and customer rights.
      extractable: false

    - name: refund_reason
      description: >
        The reason that the customer would like to process the refund, which the value one of the volunteer and disease.
      extractable: false
    - name: refund_fee_breakdown
      description: >
        The fee breakdown of refund calculated by agent according to fare_rules and refund_reason
      extractable: false
  policies:
    - policy_type: StepBasedLLMPolicy
      name: "fare_basis_check"
      target: "Help user to understand the fare conditions and calculate the exchange fee and cancellation fee"
      intents:
        - fare_rule_check
      steps:
        - id: retrieve_pnr
          description: Retrive customer's booking PNR from GDS API.
          prompt: >
            First of all, the slot pnr_number should be checked, if it isn't filled, the bot
            need to send a message to user and ask for PNR number, or re-ask the right PNR
            number if it has already been asked.

            Once the PNR number is filled, then the retrieve_pnr action should be triggered to
            get the PNR information from Sabre. The PNR information will be filled in slot
            pnr_details.

            Once the pnr_details is filled, the bot need to ask the customer to confirm the
            booking information by giving them the information about booked flight, passengers etc.
            Once the customer confirme it is the booking that they want to change, go to the step
            exchange_shopping

        - id: retrieve_fare_rules
          description: Find the new flight for customer according to user's requires
          prompt: >
            If the fare_rules slot isn't present, this policy should generate the actions to retrieve the fare rules information by triggering retrieve_fare_rule.

            retrieve_fare_rule action need fare_basis_code, marketing_carrier, origin and destination as the input. These value can be given directly by
            customer, or it can be retrieved from the pnr_detail by parse_pnr action. You need to ask the customer if he can give the required
            fare_basis_code, marketing_carrier, origin and destination to retrieve the fare rules or they can give the PNR number to retrieve the PNR information.

            pnr_detail information can be retrieved by retrieve_pnr action, it need pnr_number as input which should be given by customer. Once pnr_detail
            is retrieved, we need the customer to confirm it is the right flight booking that they want to check the condition.

        - id: fare_basis_check
          description: Answer user's all question about the fare basis.
          prompt: >


      actions:
        - update_step
        - retrieve_pnr
        - exchange_shopping
        - cancel_existing_itinerary
        - bot_utter
        - listen
      llm_config:
        llm_type: openai
        llm_params:
          model_name: gpt-4o
          temperature: 1.0
  nlu:
    nlu_type: LLMNLUParser
    config:
      llm_type: openai
      llm_params:
        model_name: gpt-4o-mini
        temperature: 0.0
    local_test: true
