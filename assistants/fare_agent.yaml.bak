assistant:
  name: Flight Fare Agent Assistant

  intents:
    - name: fare_rule_check
      description: User want to know the conditions of refund, flight exchange in different context.

  slots:
    - name: pnr_number
      description: The Passenger Name Record number of the customer's booking, which is an id composed by 6 letters or digitals. It is usually called booking reference.
      extractable: true
    - name: pnr_details
      description: Details of the retrieved PNR.
      extractable: false
    - name: pnr_confirmed
      description: Confirmation from the customer that the retrieved PNR is correct.
      extractable: true

    - name: origin
      description: The origin airport IATA code of the flight, which should be composed by 3 letters
      extractable: true
    - name: destination
      description: The destination airport IATA code of the flight, which should be composed by 3 letters
      extractable: true
    - name: marketing_carrier
      description: The marketing airline IATA code of the flight, which should be two letters code
      extractable: true
    - name: fare_basis_code
      description: >
        a unique alphanumeric code used in the airline industry to identify the specific rules, restrictions, and pricing associated with a fare.
        This code is assigned to each ticket and helps airlines, travel agents, and passengers understand the conditions of the ticket,
        such as refundability, change fees, and eligibility for upgrades.
      extractable: true

    - name: fare_rules
      description: >
        detailed terms and conditions that apply to an airline ticket, as defined by the fare basis code.
        These rules determine how the ticket can be used, modified, or refunded, and they outline the restrictions associated with a particular fare.
        Fare rules are critical for both travelers and airlines because they govern flexibility, pricing, and customer rights.
      extractable: false

    - name: refund_reason
      description: >
        The reason that the customer would like to process the refund, which the value one of the volunteer and disease.
      extractable: false
    - name: refund_fee_breakdown
      description: >
        The fee breakdown of refund calculated by agent according to fare_rules and refund_reason
      extractable: false
  policies:
    - policy_type: StandardLLMPolicy
      name: retrieve_fare_basis
      intents:
        - fare_rule_check
      mission: "Retrieve fare rules from GDS API"
      instructions: >
        If the fare_rules slot isn't present, this policy should generate the actions to retrieve the fare rules information by triggering retrieve_fare_rule.

        retrieve_fare_rule action need fare_basis_code, marketing_carrier, origin and destination as the input. These value can be given directly by
        customer, or it can be retrieved from the pnr_detail by parse_pnr action. You need to ask the customer if he can give the required
        fare_basis_code, marketing_carrier, origin and destination to retrieve the fare rules or they can give the PNR number to retrieve the PNR information.

        pnr_detail information can be retrieved by retrieve_pnr action, it need pnr_number as input which should be given by customer. Once pnr_detail
        is retrieved, we need the customer to confirm it is the right flight booking that they want to check the condition.
      actions:
        - retrieve_pnr
        - parse_pnr
        - retrieve_fare_rule
        - bot_utter
        - listen
      llm_config:
        llm_type: openai
        llm_params:
          model_name: gpt-4o
          temperature: 1.0
      local_test: true

    - policy_type: StandardLLMPolicy
      name: calculate_refund_fee
      intents:
        - fare_rule_check
      mission: "Retrieve fare basis from GDS API"
      instructions: >
        If the fare_rules isn't filled, then no action should be triggered.
        if the fare_rules slot is filled, this policy should trigger the calculation of the refund fee.
        The assistant should ask the reason of the refund, then the refund_fee can be calculated by calculate_refund_fee action based on refund reason and fare rules.
      actions:
        - calculate_refund_fee
        - bot_utter
        - listen
      llm_config:
        llm_type: openai
        llm_params:
          model_name: gpt-4o
          temperature: 1.0
      local_test: true
  nlu:
    nlu_type: LLMNLUParser
    config:
      llm_type: openai
      llm_params:
        model_name: gpt-4o-mini
        temperature: 0.0
    local_test: true
